import { AxiosResponse } from "axios";
import { $authHost } from "../http";

export default class DeviceUpdateService {
    // üîπ –°–æ–∑–¥–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å —Ñ–∞–π–ª–æ–º
    static async createUpdate(deviceId: number, explain: string, updateFile: File): Promise<AxiosResponse> {
        const formData = new FormData();
        formData.append('deviceId', deviceId.toString());
        formData.append('explain', explain);
        formData.append('updateFile', updateFile);

        return $authHost.post('/api/deviceUpdate', formData, {
            headers: {
                'Content-Type': 'multipart/form-data',
            },
        });
    }

    // üîπ –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    static async getAllUpdates(): Promise<AxiosResponse> {
        return $authHost.get('/api/deviceUpdate');
    }

    // üîπ –ü–æ–ª—É—á–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ ID
    static async getUpdateById(id: number): Promise<AxiosResponse> {
        return $authHost.get(`/api/deviceUpdate/${id}`);
    }

    static async getUpdateByDeviceId(id: number): Promise<AxiosResponse> {
        return $authHost.get(`/api/deviceUpdate/getByDevice/${id}`);
    }

    // üîπ –û–±–Ω–æ–≤–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
    static async updateUpdate(id: number, deviceId: number, explain: string, updateFile?: string): Promise<AxiosResponse> {
        return $authHost.post('/api/deviceUpdate/update', {
            id,
            deviceId,
            explain,
            updateFile, // —Å—Ç—Ä–æ–∫–∞, –∫–∞–∫ –≤ –±—ç–∫–µ ‚Äî —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ –∏–º—è —Ñ–∞–π–ª–∞, –Ω–µ –æ–±—ä–µ–∫—Ç File
        });
    }

    // üîπ –£–¥–∞–ª–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
    static async deleteUpdate(id: number): Promise<AxiosResponse> {
        return $authHost.post('/api/device-update/delete', { id });
    }
}
